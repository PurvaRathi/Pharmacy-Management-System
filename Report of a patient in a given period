CREATE OR REPLACE PROCEDURE get_patient_prescriptions(
    p_patient_id VARCHAR2,
    p_start_date DATE,
    p_end_date DATE
) IS
    CURSOR c_prescriptions IS
        SELECT p.PRESID, p.DATE, p.QUANTITY, d.NAME as DOCTOR_NAME, 
               pd.TNAME, pd.CNAME, dr.FORMULA
        FROM PRESCRIPTION p
        JOIN DOCTOR d ON p.DOCID = d.AADHARID
        JOIN PRES_DRUG pd ON p.PRESID = pd.PRESID
        JOIN DRUG dr ON pd.TNAME = dr.TNAME AND pd.CNAME = dr.CNAME
        WHERE p.PID = p_patient_id
        AND p.DATE BETWEEN p_start_date AND p_end_date
        ORDER BY p.DATE DESC;
        
    v_patient_name PATIENT.NAME%TYPE;
BEGIN
    -- Get patient name
    SELECT NAME INTO v_patient_name FROM PATIENT WHERE AADHARID = p_patient_id;
    
    DBMS_OUTPUT.PUT_LINE('Prescription Report for Patient: ' || v_patient_name);
    DBMS_OUTPUT.PUT_LINE('Period: ' || TO_CHAR(p_start_date, 'DD-MON-YYYY') ||
                         ' to ' || TO_CHAR(p_end_date, 'DD-MON-YYYY'));
    DBMS_OUTPUT.PUT_LINE('--------------------------------------------------');
    
    FOR rec IN c_prescriptions LOOP
        DBMS_OUTPUT.PUT_LINE('Prescription ID: ' || rec.PRESID);
        DBMS_OUTPUT.PUT_LINE('Date: ' || TO_CHAR(rec.DATE, 'DD-MON-YYYY'));
        DBMS_OUTPUT.PUT_LINE('Doctor: ' || rec.DOCTOR_NAME);
        DBMS_OUTPUT.PUT_LINE('Drug: ' || rec.TNAME || ' (by ' || rec.CNAME || ')');
        DBMS_OUTPUT.PUT_LINE('Formula: ' || rec.FORMULA);
        DBMS_OUTPUT.PUT_LINE('Quantity: ' || rec.QUANTITY);
        DBMS_OUTPUT.PUT_LINE('--------------------------------------------------');
    END LOOP;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Patient not found');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END get_patient_prescriptions;
/
