CREATE OR REPLACE PROCEDURE get_pharmacy_stock(
    p_pharmacy_name VARCHAR2
) IS
    CURSOR c_drugs IS
        SELECT pd.TNAME, pd.CNAME, d.FORMULA, pd.PRICE, pd.QUANTITY
        FROM PHARMA_DRUG pd
        JOIN DRUG d ON pd.TNAME = d.TNAME AND pd.CNAME = d.CNAME
        WHERE pd.NAME = p_pharmacy_name
        ORDER BY pd.CNAME, pd.TNAME;
        
    v_pharmacy_address PHARMACY.ADDRESS%TYPE;
    v_pharmacy_phone PHARMACY.PHONE%TYPE;
    v_drug_count NUMBER := 0;
    v_total_quantity NUMBER := 0;
BEGIN
    -- Get pharmacy details
    SELECT ADDRESS, PHONE 
    INTO v_pharmacy_address, v_pharmacy_phone
    FROM PHARMACY 
    WHERE NAME = p_pharmacy_name;
    
    DBMS_OUTPUT.PUT_LINE('Stock Position for ' || p_pharmacy_name || ' Pharmacy');
    DBMS_OUTPUT.PUT_LINE('Address: ' || v_pharmacy_address);
    DBMS_OUTPUT.PUT_LINE('Phone: ' || v_pharmacy_phone);
    DBMS_OUTPUT.PUT_LINE('--------------------------------------------------');
    
    FOR rec IN c_drugs LOOP
        DBMS_OUTPUT.PUT_LINE('Drug: ' || rec.TNAME || ' (by ' || rec.CNAME || ')');
        DBMS_OUTPUT.PUT_LINE('Formula: ' || rec.FORMULA);
        DBMS_OUTPUT.PUT_LINE('Price: Rs.' || rec.PRICE);
        DBMS_OUTPUT.PUT_LINE('Quantity in Stock: ' || rec.QUANTITY);
        DBMS_OUTPUT.PUT_LINE('--------------------------------------------------');
        v_drug_count := v_drug_count + 1;
        v_total_quantity := v_total_quantity + NVL(rec.QUANTITY, 0);
    END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('Total drugs in stock: ' || v_drug_count);
    DBMS_OUTPUT.PUT_LINE('Total quantity of all drugs: ' || v_total_quantity);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Pharmacy not found');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END get_pharmacy_stock;
/
